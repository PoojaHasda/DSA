'''
Input: n = 3
Output: 2
Explanation: F(3) = F(2) + F(1) = 1 + 1 = 2.
'''

''' TC -> O(n) ''' //optimized code from the recursion where TC -> O(2^n)

class Solution {
    public int fib(int n) {
        int dp[] = new int[n+1];
        if(n == 0 || n == 1) return n;
        if(dp[n] != 0) return dp[n];
        dp[n] = fib(n-1) + fib(n-2);

        return dp[n];
    }
}